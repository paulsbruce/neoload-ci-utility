version: 0.2

# Uses paulsbruce/neoload-controller:aws-codebuild-7.4.0 which is built on
# Dockerfile in this repo subdirectory (add git to neotys/neoload-controller:7.4.0)

env:
  variables:
    NCP_LG_SIZE: MEDIUM
    NCP_HRS_DURATION: 1
    NCP_LG_COUNT: 1
  secrets-manager: # as an example from CodeBuild, private token in environment from Secrets Manager
    NLW_URL: NLW_CREDENTIALS:NLW_URL
    NLW_TOKEN: NLW_CREDENTIALS:NLW_TOKEN
    NTS_URL: NTS_CREDENTIALS:NTS_URL
    NTS_LICENSE_ID: NTS_CREDENTIALS:NTS_LICENSE_ID
    NTS_USER: NTS_CREDENTIALS:NTS_USER
    NTS_PASS: NTS_CREDENTIALS:NTS_PASS
    NCP_WORKGROUP_NAME: NCP_CREDENTIALS:NCP_WORKGROUP_NAME
    NCP_USER: NCP_CREDENTIALS:NCP_USER
    NCP_PASS: NCP_CREDENTIALS:NCP_PASS

phases:
  # install:
  #   commands:
  #     - whoami && pwd
  #     - printenv
  #
  # pre_build:
  #   commands:
  #     - whoami && pwd
  #     - ls -latr

  build:
    commands:
      - cd $CODEBUILD_SRC_DIR

      - |
        uname -a
        ifconfig
        cat /etc/hosts

      - |
        neoload login --url $NLW_URL --workspace "Team A" $NLW_TOKEN

      # sanity check (uses controller node only, checks License credentials, no NLW or NCP)
      - |
        /home/neoload/neoload/bin/NeoLoadCmd \
          -project $PWD/example_test/default.yaml \
          -launch 'sanityScenario' \
          -noGUI \
          -NTS $NTS_URL \
          -NTSLogin $NTS_USER:$NTS_PASS \
          -leaseLicense $NTS_LICENSE_ID:25:1

      - cp $PWD/pipelines/aws/CustomController/infrastructures.yaml $PWD/infra.yaml
      - sed -ie "s/\[\[NCP_WORKGROUP_NAME\]\]/$NCP_WORKGROUP_NAME/g" infra.yaml
      - sed -ie "s/\[\[NCP_LG_SIZE\]\]/$NCP_LG_SIZE/g" infra.yaml
      - sed -ie "s/\[\[NCP_HRS_DURATION\]\]/$NCP_HRS_DURATION/g" infra.yaml
      - sed -ie "s/\[\[NCP_LG_COUNT\]\]/$NCP_LG_COUNT/g" infra.yaml

      # smoke test (uses NeoLoad Web and Neotys Cloud Load generators)
      - |
        /home/neoload/neoload/bin/NeoLoadCmd \
          -project $PWD/example_test/default.yaml \
          -project $PWD/example_test/slas/uat.yaml \
          -launch 'smokeScenario' \
          -testResultName "AWS smoke / Cmd, Build $CODEBUILD_BUILD_NUMBER" \
          -description "Cloud LGs; Initiator: $CODEBUILD_INITIATOR" \
          -report $PWD/neoload-report/report.html,$PWD/neoload-report/report.xml \
          -SLAJUnitReport $PWD/neoload-report/junit-sla-results.xml \
          -noGUI \
          -nlweb \
          -nlwebAPIURL $NLW_URL \
          -nlwebToken $NLW_TOKEN \
          -NTS $NTS_URL \
          -NTSLogin $NTS_USER:$NTS_PASS \
          -leaseLicense $NTS_LICENSE_ID:51:1 \
          -NCPLogin "$NCP_USER:$NCP_PASS" &

      - |
        PID=$!

      - |
        RESULTS_ID=
        ITER_C=0
        while [ -z "$RESULTS_ID" ] && [ $ITER_C -le 100 ]; do
          RESULTS_ID=$(neoload test-results --filter="status=RUNNING" ls | jq '[.[]|.id]|first' -r)
          ITER_C=$((ITER_C+1))
          sleep 15
        done

        neoload test-results use $RESULTS_ID
        neoload fastfail --max-failure 25 -c $'curl -X POST "http://localhost:7400/Runtime/v1/Service.svc/StopTest" -H "Content-type: application/json" --data \'{"d":{"ForceStop":true,"QualityStatus":"FAILED"}}\''

      - |
        wait $PID


  post_build:
    commands:
      - cat $CODEBUILD_SRC_DIR/neoload-report/junit-sla-results.xml
      # if a prior step failed or err'd, don't bother waiting
      - bash -c "if [ /"$CODEBUILD_BUILD_SUCCEEDING/" == /"0/" ]; then exit 1; fi"

reports:
  report-name-or-arn:
    files:
      - neoload-report/junit-sla-results.xml
    discard-paths: yes
    file-format: JunitXml
