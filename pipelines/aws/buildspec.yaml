version: 0.2

env:
  secrets-manager:
    NLW_TOKEN: NLW_TOKEN:NLW_TOKEN

phases:
  install:
    runtime-versions:
      #docker: 18
      python: 3.8
  pre_build:
    commands:
      # get samples and specific branch of CLI for sla fastfail functionality
      - git clone https://github.com/Neotys-Labs/neoload-cli.git
      - cd neoload-cli && git checkout topic-fastfail-command && git pull
      # install the NeoLoad CLI Python client
      - python3 -m pip install -q .
      # when installing from git source
      - neoload_bin=$(find $(pyenv root) -type f -perm -100 -name neoload)
      - export PATH=$(pyenv root)/shims:${neoload_bin/neoload/}:$PATH
  build:
    commands:
      - echo $NLW_TOKEN
      - neoload --version
      # create a profile and connect to the platform
      - neoload login --url ${NLW_URL} ${NLW_TOKEN}
      # configure the test
      - neoload test-settings --zone ${NLW_DYNAMIC_ZONE} --scenario fullTest createoruse "example-AWScodebuild-SLAfail"
      - neoload project --path tests/neoload_projects/example_1/ upload
      # run the test
      - neoload run --detached --web-vu 25 --as-code default.yaml,slas/uat.yaml
      # wait for early failure signals, stop test if any SLA over 30% failed
      - neoload fastfail --max-failure 30 slas cur
  post_build:
    commands:
      # if a prior step failed or err'd, don't bother waiting
      - bash -c "if [ /"$CODEBUILD_BUILD_SUCCEEDING/" == /"0/" ]; then exit 1; fi"
      # wait for test finalization
      - neoload wait cur
artifacts:
  files:
    - artifacts.tar.gz
